/* eslint-disable react/jsx-key */
import React from "react";
import Head from "next/head";
import router from "next/router";
import styles from "../styles/Home.module.css";
import SearchBar from "../components/SearchBar";
import { useState } from "react";
import Popup from "../components/popup";

export default function Microservices() {
    const colorsarr = ["#19c37d", "#ef4146", "#5436da", "#dd5ce5"];
  const arr = [
    {
      img: "impSvg/questionmark.svg",
      header: "SimKnowledge",
      content: "Creating language model over simulation files",
      color: "#19c37d",
    },
    {
      img: "impSvg/3dmodel.svg",
      header: "Geometric Similarity",
      content: "Given a cad model, list all similar models",
      color: "#ef4146",
    },
    {
      img: "impSvg/questionmark.svg",
      header: "Electrical Diagram Digitization",
      content: "Digitize electrical circuit images",
      color: "#f4ac36",
    },
    {
      img: "impSvg/pageSearch.svg",
      header: "GraphExplore",
      content:
        "Discover knowledge from graphs hoping directly to the relavent node",
      color: "#5436da",
    },
];
arr.forEach((el, index) => {
  let rand = Math.random();
  console.log(rand);
  if (rand > 1) {
    arr[index].color = colorsarr[1];
  } else if (2 < rand) {
    arr[index].color = colorsarr[3];
  } else if (3 < rand) {
    arr[index].color = colorsarr[0];
  } else if (4 < rand) {
    arr[index].color = colorsarr[2];
  }
});
const [objtorender, setobjtorender] = useState("");
// let objtorender = {};
const [showpop, setshowpop] = useState(false);
const [datatosearch, setdatatosearch] = useState("");
return (
  <div className={styles.container}>
    <Head>
      <title>Projects-OpenAI API</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <div className="outercont max-w-full w-[93%] m-auto mt-[1.6rem] md:w-[50%] ">
      <div className="innerofoutercont">
        <div className="headerofcont flex items-center justify-center">
          <h3 className="text-[3rem]">Projects</h3>
        </div>
        <div className="items-center justify-center flex">
          <h3 className="italic text-[1.2rem] mb-[1.6rem] text-gray-600 mt-[0.8rem]">
            Explore all the current ongoing projects, Live demos are not available
          </h3>
        </div>
        <div className="mt-[0.8rem]">
          <SearchBar setdata={setdatatosearch} />
        </div>
        <div className="mt-16 mb-7 text-xl font-bold tracking-wide"></div>
        <div>
          <div className="grid  gap-10  grid-cols-2 grid-flow-row ">
            {datatosearch === ""
              ? arr.map((el) => {
                  return (
                    <div
                      className="flex space-x-3  cursor-pointer hover:scale-[1.01] transition-all duration-200"
                      onClick={(e) => {
                        setshowpop(true);
                        setobjtorender(el.header);
                      }}
                    >
                      <div
                        style={{ backgroundColor: `${el.color}` }}
                        className="p-5 rounded-md"
                      >
                        <img
                          className="invert"
                          src={el.img}
                          alt="Unable to Load!!"
                        />
                      </div>
                      <div>
                        <h1 className="font-medium">{el.header}</h1>
                        <p className="font-[400] text-[0.7rem] text-gray-500 tracking-wide">
                          {el.content.length > 45
                            ? `${el.content.substring(0, 45)}...`
                            : el.content}
                        </p>
                      </div>
                    </div>
                  );
                })
              : arr.map((el) => {
                  return el.header
                    .toUpperCase()
                    .includes(datatosearch.toUpperCase()) ? (
                    <div className="flex space-x-3 cursor-pointer hover:scale-[1.01] transition-all duration-200">
                      <div
                        style={{ backgroundColor: `${el.color}` }}
                        className="p-5 rounded-md"
                      >
                        <h1>{el.header.includes(datatosearch)}</h1>
                        <img
                          className="invert"
                          src={el.img}
                          alt="Unable to Load!!"
                        />
                      </div>
                      <div>
                        <h1 className="font-medium">{el.header}</h1>
                        <p className="font-[400] text-[0.7rem] text-gray-500 tracking-wide">
                          {el.content.length > 45
                            ? `${el.content.substring(0, 45)}...`
                            : el.content}
                        </p>
                      </div>
                    </div>
                  ) : (
                    <div className="hidden space-x-3 cursor-pointer hover:scale-[1.01] transition-all duration-200">
                      <div
                        style={{ backgroundColor: `${el.color}` }}
                        className="p-4 rounded-md"
                      >
                        <h1>{el.header.includes(datatosearch)}</h1>
                        <img
                          className="invert"
                          src={el.img}
                          alt="Unable to Load!!"
                        />
                      </div>
                      <div>
                        <h1 className="font-medium">{el.header}</h1>
                        <p className="font-light text-sm tracking-wide">
                          {el.content}
                        </p>
                      </div>
                    </div>
                  );
                })}
          </div>
        </div>
      </div>
    </div>
    {showpop ? <Popup title={objtorender} setshow={setshowpop} /> : ""}
  </div>
);
}

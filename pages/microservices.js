/* eslint-disable react/jsx-key */
import React from "react";
import Head from "next/head";
import router from "next/router";
import styles from "../styles/Home.module.css";
import SearchBar from "../components/SearchBar";
import { useState } from "react";
import Popup from "../components/popup";

export default function Microservices() {
  const colorsarr = ["#19c37d", "#ef4146", "#5436da", "#dd5ce5"];
  const arr = [
    {
      img: "impSvg/questionmark.svg",
      header: "Q&A",
      content: "Answer questions based on existing knowledge",
      color: "#19c37d",
    },
    {
      img: "impSvg/3dmodel.svg",
      header: "Grammar correction",
      content: "Corrects sentences into standard English.",
      color: "#ef4146",
    },
    {
      img: "impSvg/questionmark.svg",
      header: "Summarize for a 2nd grader",
      content: "Translates difficult text into simpler concepts.",
      color: "#f4ac36",
    },
    {
      img: "impSvg/tag.svg",
      header: "Text to command",
      content: "Translate text into programmatic commands.",
      color: "#dd5ce5",
    },
    {
      img: "impSvg/tag.svg",
      header: "English to other languages",
      content: "Translates English text into French, Spanish and Japanese.",
      color: "#dd5ce5",
    },
    {
      img: "impSvg/tag.svg",
      header: "SQL translate",
      content: "Translate natural language to SPARQL queries..",
      color: "#dd5ce5",
    },
    {
      img: "impSvg/pageSearch.svg",
      header: "Parse unstructured data",
      content: "Create tables from long form text",
      color: "#dd5ce5",
    }
  ];
  arr.forEach((el, index) => {
    let rand = Math.random();
    console.log(rand);
    if (rand > 1) {
      arr[index].color = colorsarr[1];
    } else if (2 < rand) {
      arr[index].color = colorsarr[3];
    } else if (3 < rand) {
      arr[index].color = colorsarr[0];
    } else if (4 < rand) {
      arr[index].color = colorsarr[2];
    }
  });
  const [objtorender, setobjtorender] = useState("");
  // let objtorender = {};
  const [showpop, setshowpop] = useState(false);
  const [datatosearch, setdatatosearch] = useState("");
  return (
    <div className={styles.container}>
      <Head>
        <title>Microservices-OpenAI API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="outercont max-w-full w-[93%] m-auto mt-[1.6rem] md:w-[50%] ">
        <div className="innerofoutercont">
          <div className="headerofcont flex items-center justify-center">
            <h3 className="text-[3rem]">Microservices</h3>
          </div>
          <div className="items-center justify-center flex">
            <h3 className="italic text-[1.2rem] mb-[1.6rem] text-gray-600 mt-[0.8rem] ">
              List of microservice available for use via api or in sandbox
            </h3>
          </div>
          <div className="mt-[0.8rem]">
            <SearchBar setdata={setdatatosearch} />
          </div>
          <div className="mt-16 mb-7 text-xl font-bold tracking-wide"></div>
          <div>
            <div className="grid  gap-10  grid-cols-2 grid-flow-row ">
              {datatosearch === ""
                ? arr.map((el) => {
                    return (
                      <div
                        className="flex space-x-3  cursor-pointer hover:scale-[1.01] transition-all duration-200"
                        onClick={(e) => {
                          setshowpop(true);
                          setobjtorender(el.header);
                        }}
                      >
                        <div
                          style={{ backgroundColor: `${el.color}` }}
                          className="p-5 rounded-md"
                        >
                          <img
                            className="invert"
                            src={el.img}
                            alt="Unable to Load!!"
                          />
                        </div>
                        <div>
                          <h1 className="font-medium">{el.header}</h1>
                          <p className="font-[400] text-[0.7rem] text-gray-500 tracking-wide">
                            {el.content.length > 45
                              ? `${el.content.substring(0, 45)}...`
                              : el.content}
                          </p>
                        </div>
                      </div>
                    );
                  })
                : arr.map((el) => {
                    return el.header
                      .toUpperCase()
                      .includes(datatosearch.toUpperCase()) ? (
                      <div className="flex space-x-3 cursor-pointer hover:scale-[1.01] transition-all duration-200">
                        <div
                          style={{ backgroundColor: `${el.color}` }}
                          className="p-5 rounded-md"
                        >
                          <h1>{el.header.includes(datatosearch)}</h1>
                          <img
                            className="invert"
                            src={el.img}
                            alt="Unable to Load!!"
                          />
                        </div>
                        <div>
                          <h1 className="font-medium">{el.header}</h1>
                          <p className="font-[400] text-[0.7rem] text-gray-500 tracking-wide">
                            {el.content.length > 45
                              ? `${el.content.substring(0, 45)}...`
                              : el.content}
                          </p>
                        </div>
                      </div>
                    ) : (
                      <div className="hidden space-x-3 cursor-pointer hover:scale-[1.01] transition-all duration-200">
                        <div
                          style={{ backgroundColor: `${el.color}` }}
                          className="p-4 rounded-md"
                        >
                          <h1>{el.header.includes(datatosearch)}</h1>
                          <img
                            className="invert"
                            src={el.img}
                            alt="Unable to Load!!"
                          />
                        </div>
                        <div>
                          <h1 className="font-medium">{el.header}</h1>
                          <p className="font-light text-sm tracking-wide">
                            {el.content}
                          </p>
                        </div>
                      </div>
                    );
                  })}
            </div>
          </div>
        </div>
      </div>
      {showpop ? <Popup title={objtorender} setshow={setshowpop} /> : ""}
    </div>
  );
}
